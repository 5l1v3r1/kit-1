// Generated by `go run ./dev export`

package gokit

import (
	"github.com/ysmood/gokit/pkg/exec"
	"github.com/ysmood/gokit/pkg/guard"
	"github.com/ysmood/gokit/pkg/http"
	"github.com/ysmood/gokit/pkg/os"
	"github.com/ysmood/gokit/pkg/utils"
)

// All ...
var All = utils.All

// E ...
var E = utils.E

// E1 ...
var E1 = utils.E1

// ErrArg ...
var ErrArg = utils.ErrArg

// GenerateRandomBytes ...
var GenerateRandomBytes = utils.GenerateRandomBytes

// GenerateRandomString ...
var GenerateRandomString = utils.GenerateRandomString

// JSON ...
var JSON = utils.JSON

// Nil ...
type Nil = utils.Nil

// Noop ...
var Noop = utils.Noop

// Retry ...
var Retry = utils.Retry

// S ...
var S = utils.S

// Try ...
var Try = utils.Try

// WaitSignal ...
var WaitSignal = utils.WaitSignal

// GinContext ...
type GinContext = http.GinContext

// MustServer ...
var MustServer = http.MustServer

// Req ...
var Req = http.Req

// ReqContext ...
type ReqContext = http.ReqContext

// Server ...
var Server = http.Server

// ServerContext ...
type ServerContext = http.ServerContext

// C ...
var C = os.C

// ClearScreen ...
var ClearScreen = os.ClearScreen

// Copy ...
var Copy = os.Copy

// DirExists ...
var DirExists = os.DirExists

// Dump ...
var Dump = os.Dump

// Err ...
var Err = os.Err

// Exists ...
var Exists = os.Exists

// FileExists ...
var FileExists = os.FileExists

// GoPath ...
var GoPath = os.GoPath

// HomeDir ...
var HomeDir = os.HomeDir

// Log ...
var Log = os.Log

// Matcher ...
type Matcher = os.Matcher

// Mkdir ...
var Mkdir = os.Mkdir

// MkdirOptions ...
type MkdirOptions = os.MkdirOptions

// Move ...
var Move = os.Move

// NewMatcher ...
var NewMatcher = os.NewMatcher

// OutputFile ...
var OutputFile = os.OutputFile

// OutputFileOptions ...
type OutputFileOptions = os.OutputFileOptions

// ReadFile ...
var ReadFile = os.ReadFile

// ReadJSON ...
var ReadJSON = os.ReadJSON

// ReadStringFile ...
var ReadStringFile = os.ReadStringFile

// Remove ...
var Remove = os.Remove

// Sdump ...
var Sdump = os.Sdump

// Stderr ...
var Stderr = os.Stderr

// Stdout ...
var Stdout = os.Stdout

// Walk ...
var Walk = os.Walk

// WalkContext ...
type WalkContext = os.WalkContext

// WalkGitIgnore ...
var WalkGitIgnore = os.WalkGitIgnore

// WalkIgnoreHidden ...
var WalkIgnoreHidden = os.WalkIgnoreHidden

// EnsureGoTool ...
var EnsureGoTool = exec.EnsureGoTool

// Exec ...
var Exec = exec.Exec

// ExecContext ...
type ExecContext = exec.ExecContext

// KillTree ...
var KillTree = exec.KillTree

// Guard ...
var Guard = guard.Guard

// GuardContext ...
type GuardContext = guard.GuardContext

// GuardDefaultPatterns ...
var GuardDefaultPatterns = guard.GuardDefaultPatterns
